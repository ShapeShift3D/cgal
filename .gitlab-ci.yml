stages:
  - pre-build
  - build
  - package

variables:
  PROJECT_NAME: s3d-cgal
  GIT_SUBMODULE_STRATEGY: recursive

windows:start-runner:
  image: ubuntu:latest
  stage: pre-build

  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

  before_script:
    - apt-get update
    - apt-get install curl jq unzip -y
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip -q awscliv2.zip
    - ./aws/install
    - rm -rf ./aws/* awscliv2.zip
  script:
    - aws --version
    - INSTANCE_ID=$(aws ec2 describe-instances --filters "Name=tag:Name,Values=Gitlab Runner Windows" | jq '.Reservations[0].Instances[0].InstanceId')
    - INSTANCE_ID=${INSTANCE_ID//\"}
    - "echo INSTANCE_ID: ${INSTANCE_ID}"
    - aws ec2 start-instances --instance-id $INSTANCE_ID
    - aws ec2 wait instance-running --instance-ids $INSTANCE_ID
    - aws ec2 wait instance-status-ok --instance-ids $INSTANCE_ID

windows:build:
  image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/s3d-base-windows
  stage: build
  script:
    - "& \"${env:S3D_SOURCES_DIR}/wrap-bash.bat\" ./s3d_build_cgal.sh"
    - "Copy-Item  -Path \"${env:S3D_INSTALL_DIR}/cgal\" -Destination \"${env:CI_PROJECT_DIR}/install\" -Recurse -Container -Verbose"
  tags:
    - windows
  needs:
    - windows:start-runner
  artifacts:
    paths:
      - "${CI_PROJECT_DIR}\\install"

windows:package:
  image: ubuntu:latest
  stage: package
  variables:
    PACKAGE_NAME: cgal
    PACKAGE_VERSION: "4.14.3"
  before_script:
     - apt-get update
     - apt-get install -y curl zip unzip jq
  script:
    - pwd
    - ls
    - cd install
    - zip -r "../cgal.zip" *
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file "../cgal.zip" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PACKAGE_NAME}/${PACKAGE_VERSION}/cgal.zip" -w "\n" | tee upload-result.json'
    - "[ -z \"$(jq '.error // empty' -e < upload-result.json)\" ]"
